name: CI\CD

on:
  push:
    branches:
      - master
      - dev
  pull_request:
    branches:
      - master
      - dev

  workflow_dispatch:

jobs:
#  lint:
#    name: Lint Code Base
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout Code
#        uses: actions/checkout@v2
#        with:
#          fetch-depth: 0
#
#      - name: Lint Code Base
#        uses: github/super-linter@v3
#        env:
#          VALIDATE_ALL_CODEBASE: false
#          DEFAULT_BRANCH: master
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
  build:
    name: Build project
    runs-on: ubuntu-latest
#    needs: lint
    steps:
      - uses: actions/checkout@v2
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x
      
      - name: Restore dependencies
        run: dotnet restore
      
      - name: Build
        run: dotnet build --no-restore
      
      - name: Test
        run: dotnet test --no-build --verbosity normal
      
  docker:
    name: Docker
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
            
      - name: Check Out Repo
        uses: actions/checkout@v2
        
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/ymdb:latest
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
        
  deploy:
    name: Deploy to server
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: SSH Remote Commands
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          port: ${{ secrets.SERVER_PORT }}
          key: ${{ secrets.SERVER_KEY }}
          script: docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/ymdb:latest && docker stop `docker container ls --quiet` && docker run --rm -d -v /home/${{ secrets.SERVER_USERNAME }}/config:/usr/src/app/config ${{ secrets.DOCKER_HUB_USERNAME }}/ymdb:latest
